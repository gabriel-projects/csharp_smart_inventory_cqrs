// <auto-generated />
using System;
using Api.GRRInnovations.SmartInventory.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.GRRInnovations.SmartInventory.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api.GRRInnovations.SmartInventory.Domain.Entities.CategoryModel", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uid");

                    b.HasIndex("Name");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Api.GRRInnovations.SmartInventory.Domain.Entities.ProductModel", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("SupplierUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uid");

                    b.HasIndex("CategoryUid");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Name");

                    b.HasIndex("SupplierUid");

                    b.HasIndex("Name", "CategoryUid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Api.GRRInnovations.SmartInventory.Domain.Entities.StockEntryModel", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uid");

                    b.HasIndex("EntryDate");

                    b.HasIndex("ProductUid");

                    b.ToTable("StockEntries");
                });

            modelBuilder.Entity("Api.GRRInnovations.SmartInventory.Domain.Entities.StockOutputModel", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OutputDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uid");

                    b.HasIndex("OutputDate");

                    b.HasIndex("ProductUid");

                    b.ToTable("StockOutputs");
                });

            modelBuilder.Entity("Api.GRRInnovations.SmartInventory.Domain.Entities.SupplierModel", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uid");

                    b.HasIndex("Name");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Api.GRRInnovations.SmartInventory.Domain.Entities.ProductModel", b =>
                {
                    b.HasOne("Api.GRRInnovations.SmartInventory.Domain.Entities.CategoryModel", "DbCategory")
                        .WithMany("DbProducts")
                        .HasForeignKey("CategoryUid")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Api.GRRInnovations.SmartInventory.Domain.Entities.SupplierModel", "DbSupplier")
                        .WithMany("DbProducts")
                        .HasForeignKey("SupplierUid")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("DbCategory");

                    b.Navigation("DbSupplier");
                });

            modelBuilder.Entity("Api.GRRInnovations.SmartInventory.Domain.Entities.StockEntryModel", b =>
                {
                    b.HasOne("Api.GRRInnovations.SmartInventory.Domain.Entities.ProductModel", "DbProduct")
                        .WithMany("DbStockEntries")
                        .HasForeignKey("ProductUid")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("DbProduct");
                });

            modelBuilder.Entity("Api.GRRInnovations.SmartInventory.Domain.Entities.StockOutputModel", b =>
                {
                    b.HasOne("Api.GRRInnovations.SmartInventory.Domain.Entities.ProductModel", "DbProduct")
                        .WithMany("DbStockOutputs")
                        .HasForeignKey("ProductUid")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("DbProduct");
                });

            modelBuilder.Entity("Api.GRRInnovations.SmartInventory.Domain.Entities.CategoryModel", b =>
                {
                    b.Navigation("DbProducts");
                });

            modelBuilder.Entity("Api.GRRInnovations.SmartInventory.Domain.Entities.ProductModel", b =>
                {
                    b.Navigation("DbStockEntries");

                    b.Navigation("DbStockOutputs");
                });

            modelBuilder.Entity("Api.GRRInnovations.SmartInventory.Domain.Entities.SupplierModel", b =>
                {
                    b.Navigation("DbProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
